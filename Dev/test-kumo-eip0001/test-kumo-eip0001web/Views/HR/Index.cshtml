@using PagedList.Mvc;
@using PagedList;
@using test_kumo_eip0001model;
@using test_kumo_eip0001model.Resources;

@model IEnumerable<test_kumo_eip0001model.Employee>

@{
}


<h3>
    All employees
</h3>

<div id="custom-search-input" class="row">
    <div class="input-group col-md-3" style="float:left">
        

        @Html.TextBox("keyword", ViewBag.Keyword as string, new { @class = "search-query form-control", placeholder = "Search" })
        <span class="input-group-btn">
            <a class="btn btn-danger" id="btn-search">
                <span class=" glyphicon glyphicon-search"></span>
            </a>
        </span>

    </div>
    <div class="col-md-9">
        @Html.ActionLink("Add Item", "Add", new { isdlg = 1}, new { isdlg = true, @class = "fancybox fancybox.iframe" })
    </div>

</div>


<div class="input-group col-md-9" style="text-align:right;">
    @Html.ActionLink("Export", "Index", "Export", new { exportObject = "Employee", filename = "AllEmployee.xlsx" }, new { target = "_blank", @class = "btn btn-primary", @style = " display: none;" })
</div>
<div class="clearfix"></div>
<br />

<table class="table table-bordered">
    <tr>
        <th style="width: 65px"></th>
        <th>
            @StringResources.EmployeeId
        </th>
        <th>
            @Html.ActionLink(StringResources.FirstName, "Index", new { orderby = "Firstname", keyword = ViewBag.Keyword, order = ViewBag.SortOrder }, new { @class = "sort-link", rel = ViewBag.OrderBy, sp = "Firstname" })

        </th>
        <th>
            @Html.ActionLink(StringResources.LastName, "Index", new { orderby = "Lastname", keyword = ViewBag.Keyword, order = ViewBag.SortOrder }, new { @class = "sort-link", rel = ViewBag.OrderBy, sp = "Lastname" })

        </th>

        <th>
            @Html.ActionLink(StringResources.Fullname, "Index", new { orderby = "Fullname", keyword = ViewBag.Keyword, order = ViewBag.SortOrder }, new { @class = "sort-link", rel = ViewBag.OrderBy, sp = "Fullname" })

        </th>

        <th>
            @StringResources.DateOfBirth
        </th>

        <th>
            @StringResources.JobTitle
        </th>

        <th>
            @StringResources.Department
        </th>

        <th>
            @StringResources.LineManager
        </th>

        <th>
            @StringResources.EmploymentStatus
        </th>

        <th>
            @StringResources.EffectiveDate
        </th>



        <th>
            @StringResources.MobileNumber
        </th>
        <th>
            
        </th>
        <th>
            @StringResources.EmailAddress
        </th>
        <th>
            @StringResources.HomeAddress
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "glyphicon glyphicon-list-alt text-primary", @title = StringResources.ViewItem })
                @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "glyphicon glyphicon-edit text-success", @title = StringResources.EditItem })
                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "glyphicon glyphicon-trash text-danger", @title = StringResources.DeleteItem })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Firstname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lastname)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Fullname)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth,"StandardDateFormat")
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.JobTitle)
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.Department.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Manager.Fullname)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.EmploymentStatusId)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.EffectiveDate, "StandardDateFormat")
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.MobileNumber, "PhoneFormat")
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.WorkNumber, "PhoneFormat")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            
            
        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, keyword = ViewBag.Keyword, orderby = ViewBag.OrderBy, order = ViewBag.SortOrder }), PagedListRenderOptions.Classic)
@Html.Partial("SetupJSGrid")
