@using KUMO.CentralAdmin.Web
@using System;
@model object

@{
    
    var list = new List<object>() {
        new {Id=0, Text="0%"},
          new {Id=0.1, Text="10%"},
          new {Id=0.2, Text="20%"},
          new {Id=0.3, Text="30%"},
          new {Id=0.4, Text="40%"},
          new {Id=0.5, Text="50%"},
          new {Id=0.6, Text="60%"},
          new {Id=0.7, Text="70%"},
          new {Id=0.8, Text="80%"},
          new {Id=0.9, Text="90%"},
          new {Id=1, Text="100%"},
    }.ToList();
    
    SelectList selectList = new SelectList(list,"Id","Text", ViewData.TemplateInfo.FormattedModelValue);
  
    
    var IsRequiredField = ViewData.ModelMetadata.IsRequired;
    var htmlAttributes = new RouteValueDictionary();
    if (ViewBag.@class != null)
    {
        htmlAttributes.Add("class", "control-label  " + ViewBag.@class);
    }
    else
    {
        htmlAttributes.Add("class", "form-control col-md-8");
    }
    if (ViewBag.@type != null)
    {
        htmlAttributes.Add("type", ViewBag.@type);
    }
    if (ViewBag.placeholder != null)
    {
        htmlAttributes.Add("placeholder", ViewBag.placeholder);
    }
}

<div class="form-group@(Html.ValidationErrorFor(m => m, " has-error")) @Html.Raw(IsRequiredField?"has-feedback":"")">
    @Html.LabelFor(m => m, new { @class = "control-label col-md-3" })
    <div class="col-sm-6 controls">
        @Html.DropDownList("", selectList, htmlAttributes)
       
        @if (IsRequiredField)
        {
            <span class="glyphicon glyphicon-asterisk form-control-feedback text-danger"></span>
        }
        @Html.ValidationMessageFor(m => m, null, new { @class = "help-block text-danger" })
    </div>
</div>
